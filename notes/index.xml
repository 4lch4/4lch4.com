<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Notes on 4lch4's Homepage</title><link>https://4lch4.com/notes/</link><description>Recent content in Notes on 4lch4's Homepage</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 08 Jun 2010 08:06:25 +0600</lastBuildDate><atom:link href="https://4lch4.com/notes/index.xml" rel="self" type="application/rss+xml"/><item><title>Doppler Installation</title><link>https://4lch4.com/notes/infrastructure/secrets/installation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://4lch4.com/notes/infrastructure/secrets/installation/</guid><description>Doppler Installation This note provides instructions on how to install and initialize an installation of the Doppler CLI utility: NOTE: After you&amp;rsquo;ve installed the CLI utility (on any OS), you must login to your account so you have access to your secrets:
doppler login MacOS # Prerequisite. gnupg is required for binary signature verification brew install gnupg # Next, install using brew (use `doppler update` for subsequent updates) brew install dopplerhq/cli/doppler Windows # Scoop is the recommended installation method scoop bucket add doppler https://github.</description></item><item><title>Colorize Console Output</title><link>https://4lch4.com/notes/development/node/snippets/color-console/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://4lch4.com/notes/development/node/snippets/color-console/</guid><description>Colorize Console Output Adds special characters to text to print in color in the console (combined with console.log()).
Use template literals and special characters to add the appropriate color code to the string output. For background colors, add a special character that resets the background color at the end of the string. const colorize \= (...args) \=&amp;gt; ({ black: \`\\x1b\[30m${args.join(&amp;#39; &amp;#39;)}\`, red: \`\\x1b\[31m${args.join(&amp;#39; &amp;#39;)}\`, green: \`\\x1b\[32m${args.join(&amp;#39; &amp;#39;)}\`, yellow: \`\\x1b\[33m${args.join(&amp;#39; &amp;#39;)}\`, blue: \`\\x1b\[34m${args.</description></item><item><title>Colors.ts</title><link>https://4lch4.com/notes/development/node/snippets/colors.ts/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://4lch4.com/notes/development/node/snippets/colors.ts/</guid><description>Colors.ts A helper file with a few functions to make it easier to color console output. export enum Colors { black = &amp;#39;\x1b[30m&amp;#39;, red = &amp;#39;\x1b[31m&amp;#39;, green = &amp;#39;\x1b[32m&amp;#39;, yellow = &amp;#39;\x1b[33m&amp;#39;, blue = &amp;#39;\x1b[34m&amp;#39;, magenta = &amp;#39;\x1b[35m&amp;#39;, cyan = &amp;#39;\x1b[36m&amp;#39;, white = &amp;#39;\x1b[37m&amp;#39;, bgBlack = &amp;#39;\x1b[40m&amp;#39;, bgRed = &amp;#39;\x1b[41m&amp;#39;, bgGreen = &amp;#39;\x1b[42m&amp;#39;, bgYellow = &amp;#39;\x1b[43m&amp;#39;, bgBlue = &amp;#39;\x1b[44m&amp;#39;, bgMagenta = &amp;#39;\x1b[45m&amp;#39;, bgCyan = &amp;#39;\x1b[46m&amp;#39;, bgWhite = &amp;#39;\x1b[47m&amp;#39; } export const fg = { black: (.</description></item><item><title>Create Directory if not Found</title><link>https://4lch4.com/notes/development/node/snippets/create-dir-if-not-exists/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://4lch4.com/notes/development/node/snippets/create-dir-if-not-exists/</guid><description> Create Directory if not Found Creates a directory, if it does not exist.
Use fs.existsSync() to check if the directory exists, fs.mkdirSync() to create it.
const fs = require(&amp;#39;fs&amp;#39;) const createDirIfNotExists = dir =&amp;gt; !fs.existsSync(dir) ? fs.mkdirSync(dir) : undefined createDirIfNotExists(&amp;#39;test&amp;#39;) // creates the directory &amp;#39;test&amp;#39;, if it doesn&amp;#39;t exist import { existsSync, mkdirSync } from &amp;#39;fs&amp;#39; const createDirIfNotExists = (dir: string) =&amp;gt; !existsSync(dir) ? mkdirSync(dir) : undefined createDirIfNotExists(&amp;#39;test&amp;#39;) // creates the directory &amp;#39;test&amp;#39;, if it doesn&amp;#39;t exist</description></item><item><title>Get All Files</title><link>https://4lch4.com/notes/development/node/snippets/get-all-files/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://4lch4.com/notes/development/node/snippets/get-all-files/</guid><description>Get All Files Gets all files, directories, sub-files, and sub-directories.
I personally prefer to use fs-extra for my disk operations, but regular ol&amp;rsquo; fs works as well; you just need to change the import and refactor the async/await calls into callbacks.
With fs-extra import { readdir, stat } from &amp;#39;fs-extra&amp;#39; import { join } from &amp;#39;path&amp;#39; /** * Gets all of the files from the given directory by recursively calling itself * should one of the files be a directory.</description></item><item><title>Razer Green Color</title><link>https://4lch4.com/notes/misc/razergreen/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://4lch4.com/notes/misc/razergreen/</guid><description> Razer Green Color I&amp;rsquo;ve always been fond of the green that Razer uses for their products so the following list is the color in various formats. Hex — #47E10C RGB — rgb(71, 225, 12) HSL — hsl(103, 90%, 46%) HWB — hwb(103, 5%, 12%) CMYX — cmyk(68%, 0%, 95%, 12%) NCOL — Y72, 5%, 12%</description></item><item><title>Running Commands</title><link>https://4lch4.com/notes/infrastructure/secrets/running-commands/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://4lch4.com/notes/infrastructure/secrets/running-commands/</guid><description>Running Commands How to run a command so that it has access to secrets stored in Doppler: Single Command doppler run -- &amp;lt;command-to-run&amp;gt; Multiple Commands doppler run --command=&amp;#34;echo &amp;#39;first part&amp;#39; &amp;amp;&amp;amp; echo &amp;#39;secondary part&amp;#39;; echo &amp;#39;final part&amp;#39;&amp;#34; Using a Secret To run one-off commands using a secret in Doppler, please make sure to escape the secret or use single quotes. You will need to do this to guard against shell parsing the variable before the run command executes.</description></item><item><title>Secret(s) Management</title><link>https://4lch4.com/notes/infrastructure/secrets-management/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://4lch4.com/notes/infrastructure/secrets-management/</guid><description>Secret(s) Management For the time being, I&amp;rsquo;ve decided to use Doppler to manage/share/etc. secrets throughout my infrastructure.
I say &amp;ldquo;for the time being&amp;rdquo; because my end goal for secret management is to self-host the infrastructure where my secrets are actually stored, as opposed to being stored by a 3rd party. To achieve this, I&amp;rsquo;ve been experimenting with other solutions such as Vault by HashiCorp.
Until I make the move to a self-hosted solution, I wrote a note on how to best make use of Doppler.</description></item><item><title>Standard</title><link>https://4lch4.com/notes/development/badges/standard/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://4lch4.com/notes/development/badges/standard/</guid><description>Standard This section is specifically for badges that should be added to any and all of my repositories. I outline/describe as many badges as possible, that would actually provide some benefit, in the sections after this.
Code Style Displays the code style used (prettier). [![code style: prettier](https://img.shields.io/badge/code_style-prettier-ff69b4.svg?style=flat-square)](https://github.com/prettier/prettier) Discord Provides an invite link to my Discord server. [![Discord](https://img.shields.io/discord/325504841541746688?color=7289DA&amp;amp;style=flat-square)](https://discord.gg/W72x4Ks) NPM License Displays the package license. [![NPM](https://img.shields.io/npm/l/@4is-cronicle/plugin-tools)](https://npmjs.com/package/@4is-cronicle/plugin-tools) NPM Bundle Size Displays the size of the minified package tar.</description></item><item><title>UUID Generation</title><link>https://4lch4.com/notes/development/node/snippets/uuid-generation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://4lch4.com/notes/development/node/snippets/uuid-generation/</guid><description>UUID Generation Generates a UUID in Node.JS.
Use crypto.randomBytes() to generate a UUID, compliant with RFC4122 version 4. Use Number.prototype.toString(16) to convert it to a proper UUID. const crypto = require(&amp;#39;crypto&amp;#39;) const UUIDGeneratorNode = () =&amp;gt; ([1e7] + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, c =&amp;gt; (c ^ (crypto.randomBytes(1)[0] &amp;amp; (15 &amp;gt;&amp;gt; (c / 4)))).toString(16) ) UUIDGeneratorNode() // &amp;#39;79c7c136-60ee-40a2-beb2-856f1feabefc&amp;#39; import { randomBytes } from &amp;#39;crypto&amp;#39; const UUIDGeneratorNode = (): string =&amp;gt; ([1e7] + -1e3 + -4e3 + -8e3 + -1e11).</description></item><item><title>Programatic Access</title><link>https://4lch4.com/notes/infrastructure/secrets/programatic-access/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://4lch4.com/notes/infrastructure/secrets/programatic-access/</guid><description> Programatic Access Accessing the secrets injected by Doppler within a programming language: Node const secret = process.env[&amp;#39;SECRET_NAME&amp;#39;] Python secret = os.getenv(&amp;#34;SECRET_NAME&amp;#34;) Go secret := os.Getenv(&amp;#34;SECRET_NAME&amp;#34;) Java String secret = System.getenv().get(&amp;#34;SECRET_NAME&amp;#34;) Rust secret = env::var(&amp;#34;SECRET_NAME&amp;#34;) Kotlin var secret: String = System.getenv(&amp;#34;SECRET_NAME&amp;#34;)</description></item><item><title>Chat</title><link>https://4lch4.com/notes/development/badges/chat/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://4lch4.com/notes/development/badges/chat/</guid><description> Chat Discord [![Discord](https://img.shields.io/discord/325504841541746688?color=7289DA&amp;amp;style=flat-square)](https://discord.gg/W72x4Ks)</description></item><item><title>VSCode Node Support</title><link>https://4lch4.com/notes/infrastructure/secrets/vscode-node-support/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://4lch4.com/notes/infrastructure/secrets/vscode-node-support/</guid><description>VSCode Node Support This note is a trimmed copy of a guide provided by Doppler that will &amp;ldquo;show you how to integrate the Doppler CLI into your Node.js application development and debugging workflow inside Visual Studio Code.&amp;rdquo;: Prerequisites Before beginning, ensure the following prerequisites have been met:
Doppler CLI installed locally and authenticated (doppler login). Created a Doppler Project for your application Launch Configuration Update your existing launch configuration by creating or setting runtimeExecutable to doppler and runtimeArgs to include the command for running your application.</description></item><item><title>Doppler Integrations</title><link>https://4lch4.com/notes/infrastructure/secrets/integrations/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://4lch4.com/notes/infrastructure/secrets/integrations/</guid><description> Doppler Integrations &amp;ldquo;Doppler connects to a growing list of providers to keep your secrets in sync wherever you develop and deploy.&amp;rdquo; This note provides information on the integrations that are relevant to my infrastructure/use-case(s). DigitalOcean https://docs.doppler.com/docs/digitalocean Docker https://docs.doppler.com/docs/installation-docker Docker Compose https://docs.doppler.com/docs/docker-compose Kubernetes https://docs.doppler.com/docs/kubernetes Terraform https://docs.doppler.com/docs/terraform Vercel https://docs.doppler.com/docs/vercel</description></item><item><title>Code Style</title><link>https://4lch4.com/notes/development/badges/code-style/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://4lch4.com/notes/development/badges/code-style/</guid><description> Code Style Prettier [![code style: prettier](https://img.shields.io/badge/code_style-prettier-ff69b4.svg?style=flat-square)](https://github.com/prettier/prettier)</description></item><item><title>Countly</title><link>https://4lch4.com/notes/development/badges/countly/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://4lch4.com/notes/development/badges/countly/</guid><description> Countly For sites that utilize Countly for analytics.
[![Dark-Theme](https://count.ly/badges/dark.svg)](https://count.ly/f/badge) [![Light-Theme](https://count.ly/badges/light.svg)](https://count.ly/f/badge)</description></item><item><title>Dependencies</title><link>https://4lch4.com/notes/development/badges/dependencies/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://4lch4.com/notes/development/badges/dependencies/</guid><description> Dependencies David ![David](https://img.shields.io/david/4lch4/Digital-Garden)</description></item><item><title>Doppler API</title><link>https://4lch4.com/notes/infrastructure/secrets/api/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://4lch4.com/notes/infrastructure/secrets/api/</guid><description>Doppler API This note provides information on how to fetch Doppler secrets from within your application.
Doppler provides the Secrets Download API however, if you&amp;rsquo;re using NodeJS then you can make use of their gitops-secrets library to do this a bit easier.
NOTE: Doppler has plans to publish an official SDK for Node, Go, and PHP, but when it will be available has not been shared, so this is the only method for the time being.</description></item><item><title>For Fun</title><link>https://4lch4.com/notes/development/badges/for-fun/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://4lch4.com/notes/development/badges/for-fun/</guid><description> For Fun [![ForTheBadge](https://forthebadge.com/images/badges/60-percent-of-the-time-works-every-time.svg)](https://forthebadge.com) [![ForTheBadge](https://forthebadge.com/images/badges/ages-18.svg)](https://forthebadge.com) [![ForTheBadge](https://forthebadge.com/images/badges/approved-by-veridian-dynamics.svg)](https://forthebadge.com) [![ForTheBadge](https://forthebadge.com/images/badges/as-seen-on-tv.svg)](https://forthebadge.com) [![ForTheBadge](https://forthebadge.com/images/badges/built-by-developers.svg)](https://forthebadge.com) [![ForTheBadge](https://forthebadge.com/images/badges/built-by-hipsters.svg)](https://forthebadge.com) [![ForTheBadge](https://forthebadge.com/images/badges/built-by-neckbeards.svg)](https://forthebadge.com) [![ForTheBadge](https://forthebadge.com/images/badges/built-for-android.svg)](https://forthebadge.com) [![ForTheBadge](https://forthebadge.com/images/badges/built-with-grammas-recipe.svg)](https://forthebadge.com) [![ForTheBadge](https://forthebadge.com/images/badges/check-it-out.svg)](https://forthebadge.com) [![ForTheBadge](https://forthebadge.com/images/badges/contains-17-coffee-cups.svg)](https://forthebadge.com) [![ForTheBadge](https://forthebadge.com/images/badges/designed-in-ms-paint.svg)](https://forthebadge.com) [![ForTheBadge](https://forthebadge.com/images/badges/fuck-it-ship-it.svg)](https://forthebadge.com) [![ForTheBadge](https://forthebadge.com/images/badges/no-ragrets.svg)](https://forthebadge.com) [![ForTheBadge](https://forthebadge.com/images/badges/not-a-bug-a-feature.svg)](https://forthebadge.com) [![ForTheBadge](https://forthebadge.com/images/badges/powered-by-black-magic.svg)](https://forthebadge.com) [![ForTheBadge](https://forthebadge.com/images/badges/uses-badges.svg)](https://forthebadge.com) [![ForTheBadge](https://forthebadge.com/images/badges/works-on-my-machine.svg)](https://forthebadge.com)</description></item><item><title>Licensing</title><link>https://4lch4.com/notes/development/badges/licensing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://4lch4.com/notes/development/badges/licensing/</guid><description> Licensing NPM License ![NPM](https://img.shields.io/npm/l/@4lch4/pblib)</description></item><item><title>Other</title><link>https://4lch4.com/notes/development/badges/other/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://4lch4.com/notes/development/badges/other/</guid><description> Other Powered By DigitalOcean Serves as a referral link as well.</description></item><item><title>Size</title><link>https://4lch4.com/notes/development/badges/size/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://4lch4.com/notes/development/badges/size/</guid><description> Size NPM Bundle Size ![[npm bundle size](https://img.shields.io/bundlephobia/min/@4lch4/pblib)](https://bundlephobia.com/package/@4lch4/pblib@0.2.1)</description></item><item><title>Versioning</title><link>https://4lch4.com/notes/development/badges/versioning/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://4lch4.com/notes/development/badges/versioning/</guid><description> Versioning NPM Scoped ![npm (scoped)](https://img.shields.io/npm/v/@4lch4/pblib) PowerShell Gallery ![PowerShell Gallery Version](https://img.shields.io/powershellgallery/v/Gamgee)</description></item><item><title>4lch4.com Notes</title><link>https://4lch4.com/notes/development/4lch4.com/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://4lch4.com/notes/development/4lch4.com/</guid><description>Alert Shortcodes The following alerts are available in this theme.
This is sample alert with type=&amp;quot;success&amp;quot;. This is sample alert with type=&amp;quot;danger&amp;quot;. This is sample alert with type=&amp;quot;warning&amp;quot;. This is sample alert with type=&amp;quot;info&amp;quot;. This is sample alert with type=&amp;quot;dark&amp;quot;. This is sample alert with type=&amp;quot;primary&amp;quot;. This is sample alert with type=&amp;quot;secondary&amp;quot;. Image Shortcodes A sample image without any attribute &amp;lt;img src=&amp;quot;/posts/shortcodes/boat.jpg&amp;quot;
alt=&amp;quot;A boat at the sea&amp;quot; A sample image with height and width attributes &amp;lt;img src=&amp;quot;/posts/shortcodes/boat.</description></item><item><title>Leonardo Syndrome</title><link>https://4lch4.com/notes/misc/leonardo-syndrome/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://4lch4.com/notes/misc/leonardo-syndrome/</guid><description>Ever heard of Leonardo Syndrome?
If you’ve read Peter Burke’s excellent book, The Polymath,1 then you will have done, but if not: Leonardo Syndrome is where the drive to learn more and more results in beginning many projects but actually finishing few.2
It’s named ‘Leonardo Syndrome’ after Leonardo da Vinci himself. Despite being one of the most famous polymaths and creators in history - who doesn’t know about him?! - he was also somebody prone to failure.</description></item><item><title>The Future of the Web is on the Edge</title><link>https://4lch4.com/notes/misc/future-of-the-web/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://4lch4.com/notes/misc/future-of-the-web/</guid><description>October 6, 2022
Andy Jiang
FreshDeno Deploy
In the beginning, there was a single computer on a desk in a basement in Switzerland. It had a red-inked label:
32 years later, there are hundreds of millions of versions of that computer all around the world. Some are even powered down by default.
But developing for the web still feels as if there is only one machine. We develop as if our code is going to be deployed on a single instance of a server somewhere in a huge data center in Virginia, California, or Switzerland.</description></item></channel></rss>